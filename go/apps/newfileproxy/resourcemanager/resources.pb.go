// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resources.proto

/*
Package resourcemanager is a generated protocol buffer package.

It is generated from these files:
	resources.proto

It has these top-level messages:
	PrincipalInfo
	CombinedPrincipal
	ResourceInfo
	ResourceMasterInfo
*/
package resourcemanager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResourceType int32

const (
	ResourceType_FILE      ResourceType = 1
	ResourceType_DIRECTORY ResourceType = 2
)

var ResourceType_name = map[int32]string{
	1: "FILE",
	2: "DIRECTORY",
}
var ResourceType_value = map[string]int32{
	"FILE":      1,
	"DIRECTORY": 2,
}

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}
func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (x *ResourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResourceType_value, data, "ResourceType")
	if err != nil {
		return err
	}
	*x = ResourceType(value)
	return nil
}
func (ResourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PrincipalInfo struct {
	// Principal name (should match common name in cert, if user, OU if application).
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Signed certificate.
	Cert             []byte `protobuf:"bytes,2,opt,name=cert" json:"cert,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PrincipalInfo) Reset()                    { *m = PrincipalInfo{} }
func (m *PrincipalInfo) String() string            { return proto.CompactTextString(m) }
func (*PrincipalInfo) ProtoMessage()               {}
func (*PrincipalInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PrincipalInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PrincipalInfo) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

// A combined principal is several principals like application, user, all of
// which have to be authenticated to constitute an authorization.
type CombinedPrincipal struct {
	Principals       []*PrincipalInfo `protobuf:"bytes,1,rep,name=principals" json:"principals,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CombinedPrincipal) Reset()                    { *m = CombinedPrincipal{} }
func (m *CombinedPrincipal) String() string            { return proto.CompactTextString(m) }
func (*CombinedPrincipal) ProtoMessage()               {}
func (*CombinedPrincipal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CombinedPrincipal) GetPrincipals() []*PrincipalInfo {
	if m != nil {
		return m.Principals
	}
	return nil
}

// Readers and writers can delegate writes.
// Writers to a directory can create and delete files in the directory.
type ResourceInfo struct {
	// Resource name,  e.g. - directory1/directory2/filename.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// Always ResourceType.FILE.
	Type *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	// Encoded created time.
	DateCreated *string `protobuf:"bytes,3,opt,name=date_created" json:"date_created,omitempty"`
	// Encoded modified time.
	DateModified *string `protobuf:"bytes,4,opt,name=date_modified" json:"date_modified,omitempty"`
	// Size in bytes.
	Size *int32 `protobuf:"varint,5,opt,name=size" json:"size,omitempty"`
	// File encryption and integrity keys.
	Keys []byte `protobuf:"bytes,6,opt,name=keys" json:"keys,omitempty"`
	// List of owners.
	Owners []*CombinedPrincipal `protobuf:"bytes,7,rep,name=owners" json:"owners,omitempty"`
	// List of writers.
	Writers []*CombinedPrincipal `protobuf:"bytes,8,rep,name=writers" json:"writers,omitempty"`
	// List of readers.
	Readers          []*CombinedPrincipal `protobuf:"bytes,9,rep,name=readers" json:"readers,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ResourceInfo) Reset()                    { *m = ResourceInfo{} }
func (m *ResourceInfo) String() string            { return proto.CompactTextString(m) }
func (*ResourceInfo) ProtoMessage()               {}
func (*ResourceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ResourceInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ResourceInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ResourceInfo) GetDateCreated() string {
	if m != nil && m.DateCreated != nil {
		return *m.DateCreated
	}
	return ""
}

func (m *ResourceInfo) GetDateModified() string {
	if m != nil && m.DateModified != nil {
		return *m.DateModified
	}
	return ""
}

func (m *ResourceInfo) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ResourceInfo) GetKeys() []byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *ResourceInfo) GetOwners() []*CombinedPrincipal {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *ResourceInfo) GetWriters() []*CombinedPrincipal {
	if m != nil {
		return m.Writers
	}
	return nil
}

func (m *ResourceInfo) GetReaders() []*CombinedPrincipal {
	if m != nil {
		return m.Readers
	}
	return nil
}

type ResourceMasterInfo struct {
	// Service name owning resources (files).
	ServiceName *string `protobuf:"bytes,1,opt,name=service_name" json:"service_name,omitempty"`
	// Directory files are stored.
	BaseDirectoryName *string `protobuf:"bytes,2,opt,name=base_directory_name" json:"base_directory_name,omitempty"`
	// Policy key used to sign user certs, etc.
	PolicyCert []byte `protobuf:"bytes,3,opt,name=policy_cert" json:"policy_cert,omitempty"`
	// Resources.
	Resources        []*ResourceInfo `protobuf:"bytes,4,rep,name=resources" json:"resources,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ResourceMasterInfo) Reset()                    { *m = ResourceMasterInfo{} }
func (m *ResourceMasterInfo) String() string            { return proto.CompactTextString(m) }
func (*ResourceMasterInfo) ProtoMessage()               {}
func (*ResourceMasterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResourceMasterInfo) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *ResourceMasterInfo) GetBaseDirectoryName() string {
	if m != nil && m.BaseDirectoryName != nil {
		return *m.BaseDirectoryName
	}
	return ""
}

func (m *ResourceMasterInfo) GetPolicyCert() []byte {
	if m != nil {
		return m.PolicyCert
	}
	return nil
}

func (m *ResourceMasterInfo) GetResources() []*ResourceInfo {
	if m != nil {
		return m.Resources
	}
	return nil
}

func init() {
	proto.RegisterType((*PrincipalInfo)(nil), "resourcemanager.PrincipalInfo")
	proto.RegisterType((*CombinedPrincipal)(nil), "resourcemanager.CombinedPrincipal")
	proto.RegisterType((*ResourceInfo)(nil), "resourcemanager.ResourceInfo")
	proto.RegisterType((*ResourceMasterInfo)(nil), "resourcemanager.ResourceMasterInfo")
	proto.RegisterEnum("resourcemanager.ResourceType", ResourceType_name, ResourceType_value)
}

func init() { proto.RegisterFile("resources.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xdf, 0x4a, 0xeb, 0x40,
	0x10, 0xc6, 0x49, 0x9a, 0xfe, 0xc9, 0x34, 0xe5, 0xf4, 0x6c, 0x7b, 0x60, 0xe1, 0xa0, 0x94, 0xdc,
	0x58, 0x14, 0x8a, 0xd4, 0x47, 0xa8, 0x55, 0x0a, 0x8a, 0x52, 0x7a, 0xe3, 0x55, 0xd8, 0x26, 0x53,
	0x59, 0x6c, 0xb2, 0x61, 0x76, 0xb5, 0xc4, 0x87, 0x10, 0x7c, 0x63, 0xc9, 0xd6, 0xd6, 0xda, 0xde,
	0xe8, 0xe5, 0xcc, 0xec, 0xc7, 0xf7, 0x9b, 0xf9, 0x16, 0xfe, 0x10, 0x6a, 0xf5, 0x4c, 0x31, 0xea,
	0x41, 0x4e, 0xca, 0x28, 0xb6, 0x6d, 0xa4, 0x22, 0x13, 0x8f, 0x48, 0xe1, 0x19, 0xb4, 0xee, 0x49,
	0x66, 0xb1, 0xcc, 0xc5, 0x72, 0x92, 0x2d, 0x14, 0x0b, 0xc0, 0xcb, 0x44, 0x8a, 0xdc, 0xe9, 0x39,
	0x7d, 0xbf, 0xac, 0x62, 0x24, 0xc3, 0xdd, 0x9e, 0xd3, 0x0f, 0xc2, 0x6b, 0xf8, 0x3b, 0x52, 0xe9,
	0x5c, 0x66, 0x98, 0x6c, 0x45, 0x6c, 0x08, 0x90, 0x6f, 0x0a, 0xcd, 0x9d, 0x5e, 0xa5, 0xdf, 0x1c,
	0x1e, 0x0f, 0xf6, 0x7c, 0x06, 0xdf, 0x4c, 0xc2, 0x77, 0x17, 0x82, 0xe9, 0xe7, 0x8b, 0x3d, 0x57,
	0x77, 0xed, 0x6a, 0x8a, 0x1c, 0xad, 0x6b, 0x95, 0x75, 0x21, 0x48, 0x84, 0xc1, 0x28, 0x26, 0x14,
	0x06, 0x13, 0x5e, 0xb1, 0x64, 0xff, 0xa0, 0x65, 0xbb, 0xa9, 0x4a, 0xe4, 0x42, 0x62, 0xc2, 0xbd,
	0x0d, 0xb0, 0x96, 0xaf, 0xc8, 0xab, 0x56, 0x1a, 0x80, 0xf7, 0x84, 0x85, 0xe6, 0xb5, 0x12, 0x9f,
	0x0d, 0xa1, 0xa6, 0x56, 0x19, 0x92, 0xe6, 0x75, 0x4b, 0x19, 0x1e, 0x50, 0x1e, 0x6e, 0x77, 0x01,
	0xf5, 0x15, 0x49, 0x53, 0x8a, 0x1a, 0xbf, 0x11, 0x11, 0x8a, 0xa4, 0x14, 0xf9, 0x3f, 0x15, 0x85,
	0x6f, 0x0e, 0xb0, 0xcd, 0x4d, 0x6e, 0x85, 0x36, 0x48, 0xf6, 0x32, 0x5d, 0x08, 0x34, 0xd2, 0x8b,
	0x8c, 0x31, 0xda, 0xc9, 0xe5, 0x3f, 0x74, 0xe6, 0x42, 0x63, 0x94, 0x48, 0xc2, 0xd8, 0x28, 0x2a,
	0xd6, 0x43, 0xd7, 0x0e, 0x3b, 0xd0, 0xcc, 0xd5, 0x52, 0xc6, 0x45, 0x64, 0xb3, 0xab, 0xd8, 0xe5,
	0xcf, 0xc1, 0xdf, 0x7e, 0x06, 0xee, 0x59, 0xaa, 0xa3, 0x03, 0xaa, 0xdd, 0x4c, 0x4e, 0x4f, 0xbe,
	0x32, 0x9a, 0x15, 0x39, 0xb2, 0x06, 0x78, 0x57, 0x93, 0x9b, 0x71, 0xdb, 0x61, 0x2d, 0xf0, 0x2f,
	0x27, 0xd3, 0xf1, 0x68, 0x76, 0x37, 0x7d, 0x68, 0xbb, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc3,
	0xe2, 0xd1, 0x72, 0x66, 0x02, 0x00, 0x00,
}
