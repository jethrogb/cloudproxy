// Code generated by protoc-gen-go.
// source: linux_host.proto
// DO NOT EDIT!

package tao

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LinuxHostSealedBundle struct {
	Policy           *string `protobuf:"bytes,1,req,name=policy" json:"policy,omitempty"`
	PolicyInfo       *string `protobuf:"bytes,2,opt,name=policy_info" json:"policy_info,omitempty"`
	Data             []byte  `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LinuxHostSealedBundle) Reset()                    { *m = LinuxHostSealedBundle{} }
func (m *LinuxHostSealedBundle) String() string            { return proto.CompactTextString(m) }
func (*LinuxHostSealedBundle) ProtoMessage()               {}
func (*LinuxHostSealedBundle) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *LinuxHostSealedBundle) GetPolicy() string {
	if m != nil && m.Policy != nil {
		return *m.Policy
	}
	return ""
}

func (m *LinuxHostSealedBundle) GetPolicyInfo() string {
	if m != nil && m.PolicyInfo != nil {
		return *m.PolicyInfo
	}
	return ""
}

func (m *LinuxHostSealedBundle) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type LinuxHostConfig struct {
	// Either "root" or "stacked"
	Type *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	// Either "TPM", "pipe", "file", or "unix"
	ParentType *string `protobuf:"bytes,2,opt,name=parent_type" json:"parent_type,omitempty"`
	// For non-tpm parent types, the parent connection spec
	ParentSpec *string `protobuf:"bytes,3,opt,name=parent_spec" json:"parent_spec,omitempty"`
	// Socket directory, relative to host configuration directory.
	SocketDir *string `protobuf:"bytes,4,opt,name=socket_dir" json:"socket_dir,omitempty"`
	// Either "process", "docker", or "kvm_coreos"
	Hosting *string `protobuf:"bytes,5,req,name=hosting" json:"hosting,omitempty"`
	// Path to CoreOS image for hosted KVM, absolute or relative to domain.
	KvmCoreosImg *string `protobuf:"bytes,6,opt,name=kvm_coreos_img" json:"kvm_coreos_img,omitempty"`
	// KB of memory to allocate for each VM
	KvmCoreosVmMemory *int32 `protobuf:"varint,7,opt,name=kvm_coreos_vm_memory" json:"kvm_coreos_vm_memory,omitempty"`
	// Path to CoreOS authorized_keys for hosted KVM, absolute or relative to domain.
	KvmCoreosSshAuthKeys *string `protobuf:"bytes,8,opt,name=kvm_coreos_ssh_auth_keys" json:"kvm_coreos_ssh_auth_keys,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *LinuxHostConfig) Reset()                    { *m = LinuxHostConfig{} }
func (m *LinuxHostConfig) String() string            { return proto.CompactTextString(m) }
func (*LinuxHostConfig) ProtoMessage()               {}
func (*LinuxHostConfig) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *LinuxHostConfig) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *LinuxHostConfig) GetParentType() string {
	if m != nil && m.ParentType != nil {
		return *m.ParentType
	}
	return ""
}

func (m *LinuxHostConfig) GetParentSpec() string {
	if m != nil && m.ParentSpec != nil {
		return *m.ParentSpec
	}
	return ""
}

func (m *LinuxHostConfig) GetSocketDir() string {
	if m != nil && m.SocketDir != nil {
		return *m.SocketDir
	}
	return ""
}

func (m *LinuxHostConfig) GetHosting() string {
	if m != nil && m.Hosting != nil {
		return *m.Hosting
	}
	return ""
}

func (m *LinuxHostConfig) GetKvmCoreosImg() string {
	if m != nil && m.KvmCoreosImg != nil {
		return *m.KvmCoreosImg
	}
	return ""
}

func (m *LinuxHostConfig) GetKvmCoreosVmMemory() int32 {
	if m != nil && m.KvmCoreosVmMemory != nil {
		return *m.KvmCoreosVmMemory
	}
	return 0
}

func (m *LinuxHostConfig) GetKvmCoreosSshAuthKeys() string {
	if m != nil && m.KvmCoreosSshAuthKeys != nil {
		return *m.KvmCoreosSshAuthKeys
	}
	return ""
}

func init() {
	proto.RegisterType((*LinuxHostSealedBundle)(nil), "tao.LinuxHostSealedBundle")
	proto.RegisterType((*LinuxHostConfig)(nil), "tao.LinuxHostConfig")
}

var fileDescriptor7 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8e, 0x4b, 0x4e, 0xc4, 0x30,
	0x0c, 0x86, 0xd5, 0x79, 0x82, 0x19, 0xcd, 0xa0, 0xf0, 0x90, 0x17, 0x2c, 0xaa, 0x59, 0xb1, 0xe2,
	0x10, 0xb0, 0x41, 0x88, 0x1d, 0x07, 0x88, 0xa2, 0xd6, 0xd3, 0x46, 0x6d, 0xe3, 0x2a, 0x71, 0x11,
	0xbd, 0x20, 0xe7, 0x22, 0xe9, 0x48, 0x4c, 0x77, 0xf6, 0xf7, 0xff, 0xfe, 0x64, 0xb8, 0x6d, 0xad,
	0x1b, 0x7e, 0x74, 0xcd, 0x41, 0x5e, 0x7a, 0xcf, 0xc2, 0x6a, 0x29, 0x86, 0x8f, 0x1f, 0xf0, 0xf0,
	0x99, 0x82, 0xf7, 0xc8, 0xbf, 0xc8, 0xb4, 0x54, 0xbe, 0x0e, 0xae, 0x6c, 0x49, 0xed, 0x61, 0xd3,
	0x73, 0x6b, 0x8b, 0x11, 0xb3, 0x7c, 0xf1, 0x7c, 0xad, 0xee, 0xe0, 0xe6, 0xbc, 0x6b, 0xeb, 0x4e,
	0x8c, 0x8b, 0x3c, 0x8b, 0x70, 0x07, 0xab, 0xd2, 0x88, 0xc1, 0x65, 0xac, 0xec, 0x8e, 0xbf, 0x19,
	0x1c, 0xfe, 0x65, 0x6f, 0xec, 0x4e, 0xb6, 0x4a, 0x0d, 0x19, 0x7b, 0x9a, 0x49, 0x8c, 0x27, 0x27,
	0x7a, 0x82, 0x67, 0xc9, 0x05, 0x86, 0x9e, 0x8a, 0xe8, 0x4a, 0x50, 0x01, 0x04, 0x2e, 0x1a, 0x12,
	0x5d, 0x5a, 0x8f, 0xab, 0x89, 0x1d, 0x60, 0x9b, 0xde, 0xb7, 0xae, 0xc2, 0xf5, 0xa4, 0x7b, 0x84,
	0x7d, 0xf3, 0xdd, 0xe9, 0x82, 0x3d, 0x71, 0xd0, 0xb6, 0xab, 0x70, 0x33, 0x15, 0x9f, 0xe0, 0x7e,
	0xc6, 0xe3, 0xd4, 0x51, 0xc7, 0x7e, 0xc4, 0x6d, 0x4c, 0xd7, 0x2a, 0x07, 0x9c, 0xa5, 0x21, 0xd4,
	0xda, 0x0c, 0x52, 0xeb, 0x86, 0xc6, 0x80, 0x57, 0xe9, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xd7,
	0xe1, 0xcc, 0x04, 0x2c, 0x01, 0x00, 0x00,
}
